esphome:
  name: garager
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: NotProgrium
  password: !secret wifi_password

api:
  password: !secret wifi_password

ota:
  password: !secret wifi_password

logger:
  level: INFO

web_server:
  port: 80

globals:
  - id: performing_last_movement
    type: boolean
    restore_value: no
    initial_value: 'false'

switch:
  - platform: gpio
    pin: D6
    id: garage_switch
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: garage_switch

binary_sensor:
  - platform: gpio
    id: garage_open
    internal: True
    pin:
      number: D4
      mode: INPUT_PULLUP
      inverted: True
    name: "Garage Open"
  - platform: gpio
    id: garage_closed
    internal: True
    pin:
      number: D7
      mode: INPUT_PULLUP
      inverted: True
    name: "Garage Closed"


cover:
  - platform: template
    name: "Garage Door"
    id: garage_door
    device_class: garage
    assumed_state: True
    lambda: !lambda |-
      if (id(garage_closed).state) //Door at closed endstop
      {
        if (id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_OPENING) //We should be opening
        {
          if (!id(performing_last_movement)) //Make sure we don't trigger this logic twice otherwise it will do unwanted things
          {
            delay(1000); //Wait for door to stop in case reed is triggered too early
            id(garage_switch).turn_on(); //Press button again
            id(performing_last_movement) = true; //Set flag to indicate we madeknow where the door is
          }
        }
        else if (id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_CLOSING)
        {
          //We should be closing, so all is good
          id(performing_last_movement) = false;
          id(garage_door).current_operation =  esphome::cover::COVER_OPERATION_IDLE;
          id(garage_door).position = COVER_CLOSED;
          id(garage_door).publish_state();
          return COVER_CLOSED;
        }
        else
        {
          //No operation in progress, just send state
          id(performing_last_movement) = false;
          if (!id(garage_door).position == esphome::cover::COVER_CLOSED)
          {
            id(garage_door).position = COVER_CLOSED;
            id(garage_door).publish_state();
            return COVER_CLOSED;
          }
        }
      }
      else if (id(garage_open).state) //Door at open endstop
      {
        if (id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_CLOSING) //We should be closing
        {
          if (!id(performing_last_movement))  //Make sure we don't trigger this logic twice otherwise it will do unwanted things
          {
            delay(1000);  //Wait for door to stop in case reed is triggered too early
            id(garage_switch).turn_on(); //Press button again
            id(performing_last_movement) = true; //Set flag to indicate we madeknow where the door is
          }
        }
        else if (id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_OPENING)
        {
          //We should be opening, so all is good
          id(performing_last_movement) = false;
          id(garage_door).current_operation =  esphome::cover::COVER_OPERATION_IDLE;
          id(garage_door).position = COVER_OPEN;
          id(garage_door).publish_state();
          return COVER_OPEN;
        }
        else //Door not at any endstop
        {
          //No operation in progress, just send state
          id(performing_last_movement) = false;
          if (id(garage_door).position != esphome::cover::COVER_OPEN)
          {
            id(garage_door).position = COVER_OPEN;
            id(garage_door).publish_state();
            return COVER_OPEN;
          }
        }
      }
      else
      {
        //The door is halfway open, so set it to OPEN
        if (id(garage_door).position != esphome::cover::COVER_OPEN)
          {
            id(garage_door).position = COVER_OPEN;
            id(garage_door).publish_state();
            return COVER_OPEN;
          }
      }
      return {};
    open_action:
      - lambda: !lambda |-
          id(garage_door).current_operation =  esphome::cover::COVER_OPERATION_OPENING;
          if (!id(garage_open).state) {
            id(garage_switch).turn_on();
            if (id(garage_closed).state) {
              id(performing_last_movement) = true; //Set flag to indicate we know where the door is
            }
          }
    close_action:
      - lambda: !lambda |-
          id(garage_door).current_operation =  esphome::cover::COVER_OPERATION_CLOSING;
          if (!id(garage_closed).state) {
            id(garage_switch).turn_on();
            if (id(garage_open).state) {
              id(performing_last_movement) = true; //Set flag to indicate we know where the door is
            }
          }
    stop_action:
      - lambda: !lambda |-
          if (id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_CLOSING || id(garage_door).current_operation ==  esphome::cover::COVER_OPERATION_OPENING )
          {
            id(garage_door).current_operation =  esphome::cover::COVER_OPERATION_IDLE;
            //Stop the door if it is moving
            id(performing_last_movement) = false;
            id(garage_switch).turn_on();
          }
