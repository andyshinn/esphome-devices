esphome:
  name: thermostat
  comment: Home Thermostat

wifi:
  ssid: NotProgrium
  password: !secret wifi_password
  fast_connect: true

logger:
  level: ERROR

web_server:
  port: 80

api:
  encryption:
    key: !secret key_thermo32

esp32:
  board: atmegazero_esp32s2

ota:
  password: !secret wifi_password

i2c:
  sda: GPIO8
  scl: GPIO9

spi:
  clk_pin: GPIO36
  mosi_pin: GPIO35
  miso_pin: GPIO37

globals:
  - id: show_fahrenheit
    type: bool
    restore_value: no
    initial_value: 'true'

time:
  - platform: sntp
    id: sntp_time

font:
  - id: noto_sans
    file: "gfonts://Noto Sans"
    size: 80

  - id: noto_sans_small
    file: "gfonts://Noto Sans"
    size: 26

  - id: noto_sans_medium
    file: "gfonts://Noto Sans"
    size: 40

color:
  - id: color_red
    hex: "FF0000"

  - id: color_blue
    hex: "0000FF"

  - id: color_green
    hex: "00FF00"

  - id: color_auto
    hex: "FFFF00"

  - id: light_gray
    hex: "EEEEEE"

image:
  - file: mdi:fan
    id: fan_icon
    resize: 80x80

  - file: mdi:snowflake
    id: cooling_icon
    resize: 80x80

  - file: mdi:snowflake
    id: cooling_icon_small
    resize: 26x26

  - file: mdi:snowflake
    id: cooling_icon_medium
    resize: 40x40

  - file: mdi:fire
    id: heating_icon
    resize: 80x80

  - file: mdi:fire
    id: heating_icon_small
    resize: 26x26

  - file: mdi:fire
    id: heating_icon_medium
    resize: 40x40

  - file: mdi:autorenew
    id: auto_icon
    resize: 80x80

  - file: mdi:power
    id: off_icon
    resize: 80x80

  - id: arrow_up
    file: mdi:arrow-up-bold-box
    resize: 80x80

  - id: arrow_down
    file: mdi:arrow-down-bold-box
    resize: 80x80

  - id: arrow_left_medium
    file: mdi:arrow-left-bold-box
    resize: 40x40

  - id: arrow_right_medium
    file: mdi:arrow-right-bold-box
    resize: 40x40

  - id: home_temp
    file: mdi:home-thermometer
    resize: 80x80

display:
  - platform: ili9xxx
    id: thermostat_display
    model: ili9486
    dc_pin: GPIO2
    cs_pin: GPIO38
    reset_pin: GPIO7
    rotation: 90Â°
    dimensions: 320x480
    data_rate: 20MHz
    pages:
      - id: home
        lambda: |-
          auto convertTemp = [](float temp) -> float {
            return id(show_fahrenheit) ? (temp * 9.0 / 5.0 + 32) : temp;
          };

          auto drawIcon = [&it](int x, int y, esphome::image::Image *id, esphome::display::ImageAlign align, esphome::Color color) {
            it.image(x, y, id, align, color);
          };

          auto printText = [&it](int x, int y, esphome::font::Font *font, esphome::display::TextAlign align, const char* text) {
            it.print(x, y, font, align, text);
          };

          auto action = id(thermostat_home).action;
          auto mode = id(thermostat_home).mode;

          float current_temp = convertTemp(id(bme280_temperature).state);
          float target_low = convertTemp(id(thermostat_home).target_temperature_low);
          float target_high = convertTemp(id(thermostat_home).target_temperature_high);

          char current_temp_str[10];
          char target_low_str[10];
          char target_high_str[10];

          snprintf(current_temp_str, sizeof(current_temp_str), "%.1f", current_temp);
          snprintf(target_low_str, sizeof(target_low_str), "%.1f", target_low);
          snprintf(target_high_str, sizeof(target_high_str), "%.1f", target_high);

          std::string action_text;

          it.fill(Color::BLACK);

          switch (action) {
            case climate::CLIMATE_ACTION_OFF: action_text = "Off"; break;
            case climate::CLIMATE_ACTION_HEATING: action_text = "Heating"; break;
            case climate::CLIMATE_ACTION_COOLING: action_text = "Cooling"; break;
            case climate::CLIMATE_ACTION_IDLE: action_text = "Idle"; break;
            default: action_text = "Unknown"; break;
          }

          switch (mode) {
            case climate::CLIMATE_MODE_OFF: drawIcon(475, 315, id(off_icon), ImageAlign::BOTTOM_RIGHT, id(light_gray)); break;
            case climate::CLIMATE_MODE_HEAT: drawIcon(475, 315, id(heating_icon), ImageAlign::BOTTOM_RIGHT, id(color_red)); break;
            case climate::CLIMATE_MODE_COOL: drawIcon(475, 315, id(cooling_icon), ImageAlign::BOTTOM_RIGHT, id(color_blue)); break;
            case climate::CLIMATE_MODE_HEAT_COOL: drawIcon(475, 315, id(auto_icon), ImageAlign::BOTTOM_RIGHT, id(color_auto)); break;
            default: drawIcon(475, 315, id(off_icon), ImageAlign::BOTTOM_RIGHT, id(light_gray)); break;
          }

          // Show current temp icon and text
          drawIcon(0, 14, id(home_temp), ImageAlign::TOP_LEFT, id(color_green));
          printText(100, 0, id(noto_sans), TextAlign::TOP_LEFT, current_temp_str);

          // Show set point icons
          drawIcon((it.get_width() /2) - 50, 150, id(heating_icon_medium), ImageAlign::CENTER_LEFT, id(color_red));
          drawIcon((it.get_width() /2) - 50, 230, id(cooling_icon_medium), ImageAlign::CENTER_LEFT, id(color_blue));

          // Show set point text
          printText(it.get_width() / 2, 150, id(noto_sans_medium), TextAlign::CENTER_LEFT, target_low_str);
          printText(it.get_width() / 2, 230, id(noto_sans_medium), TextAlign::CENTER_LEFT, target_high_str);

          // Show set point arrows
          drawIcon((it.get_width() /2) + 130, 150, id(arrow_right_medium), ImageAlign::CENTER_RIGHT, id(color_red));
          drawIcon((it.get_width() /2) + 130, 230, id(arrow_right_medium), ImageAlign::CENTER_RIGHT, id(color_blue));
          drawIcon((it.get_width() /2) - 100, 150, id(arrow_left_medium), ImageAlign::CENTER_LEFT, id(color_red));
          drawIcon((it.get_width() /2) - 100, 230, id(arrow_left_medium), ImageAlign::CENTER_LEFT, id(color_blue));

          // Current action text
          printText(0, it.get_height(), id(noto_sans_medium), TextAlign::BOTTOM_LEFT, action_text.c_str());

          // Current date and time
          printText(340, 5, id(noto_sans_small), TextAlign::TOP_LEFT, id(sntp_time).now().strftime("%a, %b %d").c_str());
          printText(340, 35, id(noto_sans_small), TextAlign::TOP_LEFT, id(sntp_time).now().strftime("%I:%M %P").c_str());
      - id: graphs
        lambda: |-
          it.graph(0, 0, id(temperature_graph));

graph:
  - id: temperature_graph
    sensor: bme280_temperature
    duration: 1h
    width: 240
    height: 150
    border: false
  - id: pressure_graph
    sensor: bme280_pressure
    duration: 1h
    width: 240
    height: 150
    border: false

touchscreen:
  - platform: xpt2046
    id: thermostat_touch
    cs_pin: GPIO21
    display: thermostat_display
    interrupt_pin: GPIO33  # This doesn't appear to be working so we comment out to use polling instead
    # update_interval: 50ms
    # report_interval: 1s
    threshold: 400
    calibration_x_min: 3870
    calibration_x_max: 250
    calibration_y_min: 3930
    calibration_y_max: 260
    on_touch:
      - lambda: |-
          ESP_LOGE("cal", "x=%d, y=%d, x_raw=%d, y_raw=%0d",
            id(thermostat_touch).x,
            id(thermostat_touch).y,
            id(thermostat_touch).x_raw,
            id(thermostat_touch).y_raw
          );

button:
  - platform: template
    id: thermostat_page_next
    name: Next Page
    icon: mdi:arrow-right
    on_press:
      # Switch to next page
      - display.page.show_next: thermostat_display


switch:
  - platform: gpio
    pin: GPIO12
    name: Fan
    id: fan
    internal: true
  - platform: gpio
    pin: GPIO16
    name: Air Conditioner
    id: cooling
    internal: true
  - platform: gpio
    pin: GPIO18
    name: Heater
    id: heating
    internal: true

sensor:
  - platform: bmp280
    temperature:
      name: Temperature
      id: bme280_temperature
      internal: true
    pressure:
      name: Pressure
      id: bme280_pressure
      internal: true
    address: 0x76
    update_interval: 60s

binary_sensor:
  - platform: touchscreen
    id: thermostat_touch_heat_setpoint_down
    touchscreen_id: thermostat_touch
    name: Lower Heat Setpoint
    x_min: 110
    x_max: 200
    y_min: 110
    y_max: 180
    internal: true
    filters:
      - autorepeat:
          delay: 100ms
          # time_on: 100ms
          # time_off: 50ms
    on_press:
      - climate.control:
          id: thermostat_home
          target_temperature_low: !lambda |-
            float temp_c = id(thermostat_home).target_temperature_low;
            if (id(show_fahrenheit)) {
              float adjustment_c = 0.2 * 5.0 / 9.0;
              temp_c += -adjustment_c;
              ESP_LOGE("cal", "temp_c=%f, adjustment_c=%f", temp_c, adjustment_c);
            } else {
              temp_c += -0.2;
              ESP_LOGE("cal", "temp_c=%f", temp_c);
            }
            return temp_c;

      - component.update: thermostat_display

  - platform: touchscreen
    id: thermostat_touch_heat_setpoint_up
    touchscreen_id: thermostat_touch
    name: Raise Heat Setpoint
    x_min: 310
    x_max: 400
    y_min: 110
    y_max: 180
    internal: true
    filters:
      - autorepeat:
          delay: 10s
          time_on: 50ms
          time_off: 50ms
    on_press:
      - climate.control:
          id: thermostat_home
          target_temperature_low: !lambda |-
            float temp_c = id(thermostat_home).target_temperature_low;
            if (id(show_fahrenheit)) {
              float adjustment_c = 0.2 * 5.0 / 9.0;
              temp_c += adjustment_c;
              ESP_LOGE("cal", "temp_c=%f, adjustment_c=%f", temp_c, adjustment_c);
            } else {
              temp_c += 0.2;
              ESP_LOGE("cal", "temp_c=%f", temp_c);
            }
            return temp_c;

      - component.update: thermostat_display

climate:
  - platform: thermostat
    name: Thermostat
    id: thermostat_home
    sensor: bme280_temperature
    on_boot_restore_from: memory
    min_cooling_off_time: 300s
    min_cooling_run_time: 300s
    min_heating_off_time: 300s
    min_heating_run_time: 300s
    min_idle_time: 30s
    cool_action:
      - switch.turn_on: cooling
    heat_action:
      - switch.turn_on: heating
    idle_action:
      - switch.turn_off: cooling
      - switch.turn_off: heating

    default_preset: Home
    preset:
      - name: Home
        default_target_temperature_low: 68 Â°F
        default_target_temperature_high: 73 Â°F
        mode: heat_cool
    visual:
      min_temperature: 50 Â°F
      max_temperature: 90 Â°F
      temperature_step:
        target_temperature: 0.2
        current_temperature: 0.1
